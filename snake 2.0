#include <iostream>
#include <windows.h>
#include <cstdlib>
#include <ctime>
#include <string>
#include <conio.h>
#include <fstream>
#include <vector>

#define MAX 500

using namespace std;

// Bi·∫øn to√†n c·ª•c
int s1 = 7;
int diem = 0;
int tocdo = 150;
int highScore = 0;
bool pauseGame = false;
int level = 1;
int specialFoodTimer = 0;
bool showParticles = false;
vector<pair<int, int>> particles;

// H√†m thay th·∫ø mylib.h
void gotoXY(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}

void SetColor(int color) {
    SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), color);
}

void HideCursor() {
    CONSOLE_CURSOR_INFO cursorInfo;
    GetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursorInfo);
    cursorInfo.bVisible = false;
    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursorInfo);
}

// Khai b√°o h√†m
void veMenuChinh();
void veHieuUngMau();
void veTieuDe();
void veKhungGame();
void veThongTin();
void veTuongTren();
void veTuongDuoi();
void veTuongPhai();
void veTuongTrai();
void veTuong();
void khoiTaoRan(int toadox[], int toadoy[]);
void xoaDuLieuCu(int toadox[], int toadoy[]);
void veRan(int toadox[], int toadoy[]);
void xuLyRan(int toadox[], int toadoy[], int x, int y, int& xqua, int& yqua, int& xSpecial, int& ySpecial);
void them(int a[], int x);
void xoa(int a[], int vt);
bool ktRanChamTuong(int x0, int y0);
bool ktRanChamDuoi(int toadox[], int toadoy[]);
bool ktRan(int toadox[], int toadoy[]);
void taoQua(int& xqua, int& yqua, int toadox[], int toadoy[]);
void taoQuaDacBiet(int& xSpecial, int& ySpecial, int toadox[], int toadoy[]);
bool ktRanDeQua(int xqua, int yqua, int toadox[], int toadoy[]);
bool ktRanAnQua(int xqua, int yqua, int x0, int y0);
void veGameOver();
void vePause();
void capNhatTocDo();
void playGame();
void veHuongDan();
void veBangXepHang();
void loadHighScore();
void saveHighScore();
void veHieuUngAnQua(int x, int y);
void veParticles();
void updateParticles();
void veLevel();
void vePixelBorder();
void playSound(int frequency, int duration);

// H√†m main
int main()
{
    // C·∫•u h√¨nh console cho Visual Studio
    system("mode con cols=120 lines=35");
    SetConsoleTitleA("PIXEL SNAKE GAME - Phien Ban Pixel");
    HideCursor();
    
    srand((unsigned int)time(NULL));
    loadHighScore();
    
    while (true)
    {
        system("cls");
        veMenuChinh();
        
        char luaChon = _getch();
        
        switch (luaChon)
        {
        case '1':
            playGame();
            break;
        case '2':
            veHuongDan();
            break;
        case '3':
            veBangXepHang();
            break;
        case '4':
            SetColor(7);
            system("cls");
            cout << "\n\n\t\t+================================+\n";
            SetColor(14);
            cout << "\t\t|   CAM ON BAN DA CHOI GAME!     |\n";
            SetColor(13);
            cout << "\t\t|      HEN GAP LAI LAN SAU!      |\n";
            SetColor(11);
            cout << "\t\t|         PIXEL GAME 2024        |\n";
            SetColor(7);
            cout << "\t\t+================================+\n\n";
            Sleep(2000);
            exit(0);
            break;
        default:
            continue;
        }
    }
    
    return 0;
}

void veMenuChinh()
{
    veTieuDe();
    vePixelBorder();
    
    SetColor(11);
    cout << "\n\t\t+==========================================+\n";
    cout << "\t\t|            PIXEL MENU                    |\n";
    cout << "\t\t+==========================================+\n";
    SetColor(14);
    cout << "\t\t|  1. ‚ñ∂ Bat dau choi                      |\n";
    SetColor(13);
    cout << "\t\t|  2. ‚ùì Huong dan                        |\n";
    SetColor(12);
    cout << "\t\t|  3. üèÜ Bang xep hang                    |\n";
    SetColor(9);
    cout << "\t\t|  4. ‚ùå Thoat game                        |\n";
    SetColor(11);
    cout << "\t\t+==========================================+\n\n";
    
    SetColor(10);
    cout << "\t\t*** High Score: " << highScore << " ***\n\n";
    cout << "\t\t*** Nhan so de chon: ";
    SetColor(7);
}

void vePixelBorder()
{
    SetColor(11);
    cout << "\n\t\t";
    for(int i = 0; i < 42; i++) {
        cout << "‚ñà";
        if(i % 2 == 0) Sleep(10);
    }
    cout << "\n\t\t‚ñà";
    SetColor(12);
    for(int i = 0; i < 40; i++) cout << " ";
    SetColor(11);
    cout << "‚ñà\n\t\t";
    for(int i = 0; i < 42; i++) {
        cout << "‚ñà";
        if(i % 2 == 0) Sleep(5);
    }
    cout << "\n";
    SetColor(7);
}

void veTieuDe()
{
    SetColor(14);
    cout << "\n";
    cout << "\t\t ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      \n";
    cout << "\t\t ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà      ‚ñà‚ñà      \n";
    SetColor(13);
    cout << "\t\t ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà      \n";
    cout << "\t\t ‚ñà‚ñà      ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà      ‚ñà‚ñà      \n";
    SetColor(12);
    cout << "\t\t ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà \n";
    SetColor(11);
    cout << "\t\t     *** SNAKE - PIXEL EDITION ***\n";
}

void veHuongDan()
{
    system("cls");
    SetColor(14);
    cout << "\n\n\t\t‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
    cout << "\t\t‚ïë          HUONG DAN CHOI GAME             ‚ïë\n";
    cout << "\t\t‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n";
    SetColor(11);
    cout << "\t\t‚ïë Cach dieu khien:                         ‚ïë\n";
    cout << "\t\t‚ïë ‚Üë Mui ten len    : Di chuyen len         ‚ïë\n";
    cout << "\t\t‚ïë ‚Üì Mui ten xuong  : Di chuyen xuong       ‚ïë\n";
    cout << "\t\t‚ïë ‚Üê Mui ten trai   : Di chuyen trai        ‚ïë\n";
    cout << "\t\t‚ïë ‚Üí Mui ten phai   : Di chuyen phai        ‚ïë\n";
    cout << "\t\t‚ïë P Phim P         : Tam dung              ‚ïë\n";
    cout << "\t\t‚ïë ESC               : Thoat                ‚ïë\n";
    SetColor(13);
    cout << "\t\t‚ïë                                          ‚ïë\n";
    cout << "\t\t‚ïë Muc tieu:                                ‚ïë\n";
    cout << "\t\t‚ïë ‚Ä¢ An qua $ de tang diem (+10)            ‚ïë\n";
    cout << "\t\t‚ïë ‚Ä¢ An qua dac biet ‚òÖ de tang diem (+50)   ‚ïë\n";
    cout << "\t\t‚ïë ‚Ä¢ Tranh va cham vao tuong va than ran    ‚ïë\n";
    cout << "\t\t‚ïë ‚Ä¢ Moi 100 diem se tang level!            ‚ïë\n";
    SetColor(14);
    cout << "\t\t‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n";
    SetColor(7);
    cout << "\t\t\t[Nhan phim bat ky de quay lai]";
    _getch();
}

void veBangXepHang()
{
    system("cls");
    SetColor(14);
    cout << "\n\n\t\t‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
    cout << "\t\t‚ïë             BANG XEP HANG                ‚ïë\n";
    cout << "\t\t‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n";
    SetColor(11);
    cout << "\t\t‚ïë                                          ‚ïë\n";
    cout << "\t\t‚ïë         üèÜ HIGH SCORE: " << highScore;
    
    // CƒÉn ch·ªânh
    int spaces = 15 - to_string(highScore).length();
    for (int i = 0; i < spaces; i++) cout << " ";
    cout << "‚ïë\n";
    
    SetColor(13);
    cout << "\t\t‚ïë                                          ‚ïë\n";
    cout << "\t\t‚ïë    Hay c·ªë g·∫Øng ph√° k·ª∑ l·ª•c n√†y!           ‚ïë\n";
    cout << "\t\t‚ïë                                          ‚ïë\n";
    SetColor(14);
    cout << "\t\t‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n";
    SetColor(7);
    cout << "\t\t\t[Nhan phim bat ky de quay lai]";
    _getch();
}

void loadHighScore()
{
    ifstream file("highscore.dat");
    if (file.is_open()) {
        file >> highScore;
        file.close();
    }
}

void saveHighScore()
{
    if (diem > highScore) {
        highScore = diem;
        ofstream file("highscore.dat");
        if (file.is_open()) {
            file << highScore;
            file.close();
        }
    }
}

void playGame()
{
    system("cls");
    bool gameover = false;
    diem = 0;
    s1 = 7;
    tocdo = 150;
    level = 1;
    specialFoodTimer = 0;

    int toadox[MAX], toadoy[MAX];
    veKhungGame();
    veTuong();
    khoiTaoRan(toadox, toadoy);
    veRan(toadox, toadoy);
    
    int xqua = 0, yqua = 0;
    int xSpecial = -1, ySpecial = -1;
    taoQua(xqua, yqua, toadox, toadoy);
    
    int x = 50, y = 13;
    int check = 2;
    
    while (gameover == false)
    {
        veThongTin();
        veLevel();
        
        // T·∫°o qu·∫£ ƒë·∫∑c bi·ªát ng·∫´u nhi√™n
        specialFoodTimer++;
        if (specialFoodTimer > 200 && xSpecial == -1 && rand() % 100 < 10) {
            taoQuaDacBiet(xSpecial, ySpecial, toadox, toadoy);
            specialFoodTimer = 0;
        }
        
        // X√≥a qu·∫£ ƒë·∫∑c bi·ªát sau 10 gi√¢y
        if (xSpecial != -1 && specialFoodTimer > 100) {
            gotoXY(xSpecial, ySpecial);
            cout << " ";
            xSpecial = -1;
            ySpecial = -1;
        }
        
        // X·ª≠ l√Ω ph√≠m
        if (_kbhit())
        {
            char kitu = _getch();
            
            if (kitu == 27) // ESC
            {
                break;
            }
            else if (kitu == 'p' || kitu == 'P')
            {
                pauseGame = !pauseGame;
                if (pauseGame)
                {
                    vePause();
                    _getch();
                    pauseGame = false;
                    veThongTin();
                }
            }
            else if (kitu == -32) // Extended key
            {
                kitu = _getch();
                if (kitu == 72 && check != 0) check = 1; // L√™n
                else if (kitu == 80 && check != 1) check = 0; // Xu·ªëng
                else if (kitu == 77 && check != 3) check = 2; // Ph·∫£i
                else if (kitu == 75 && check != 2) check = 3; // Tr√°i
            }
        }
        
        if (!pauseGame)
        {
            xoaDuLieuCu(toadox, toadoy);
            
            // Di chuy·ªÉn
            if (check == 0) y++; // Xu·ªëng
            else if (check == 1) y--; // L√™n
            else if (check == 2) x++; // Ph·∫£i
            else if (check == 3) x--; // Tr√°i
            
            xuLyRan(toadox, toadoy, x, y, xqua, yqua, xSpecial, ySpecial);
            gameover = ktRan(toadox, toadoy);
        }
        
        updateParticles();
        veParticles();
        
        Sleep(tocdo);
    }
    
    if (gameover)
    {
        saveHighScore();
        veGameOver();
        _getch();
    }
}

void veKhungGame()
{
    SetColor(9);
    // V·∫Ω khung pixel
    for (int i = 0; i < 120; i++)
    {
        gotoXY(i, 0);
        cout << "‚ñà";
        gotoXY(i, 34);
        cout << "‚ñà";
    }
    
    for (int i = 0; i < 35; i++)
    {
        gotoXY(0, i);
        cout << "‚ñà";
        gotoXY(119, i);
        cout << "‚ñà";
    }
    SetColor(7);
}

void veThongTin()
{
    SetColor(14);
    gotoXY(105, 2);
    cout << "DIEM: " << diem;
    
    SetColor(13);
    gotoXY(105, 4);
    cout << "LENGTH: " << s1;
    
    SetColor(12);
    gotoXY(105, 6);
    cout << "SPEED: " << (200 - tocdo);
    
    SetColor(15);
    gotoXY(105, 8);
    cout << "HIGH: " << highScore;
    
    SetColor(11);
    gotoXY(105, 12);
    cout << "P: Pause";
    
    SetColor(10);
    gotoXY(105, 14);
    cout << "ESC: Exit";
    SetColor(7);
}

void veLevel()
{
    level = (diem / 100) + 1;
    SetColor(15);
    gotoXY(105, 10);
    cout << "LEVEL: " << level;
    SetColor(7);
}

void veTuongTren()
{
    for (int x = 10; x <= 100; x++)
    {
        gotoXY(x, 1);
        SetColor(11 + (x % 4));
        cout << "‚ñÄ";
    }
}

void veTuongDuoi()
{
    for (int x = 10; x <= 100; x++)
    {
        gotoXY(x, 26);
        SetColor(11 + (x % 4));
        cout << "‚ñÑ";
    }
}

void veTuongPhai()
{
    for (int y = 1; y <= 26; y++)
    {
        gotoXY(100, y);
        SetColor(11 + (y % 4));
        cout << "‚ñê";
    }
}

void veTuongTrai()
{
    for (int y = 1; y <= 26; y++)
    {
        gotoXY(10, y);
        SetColor(11 + (y % 4));
        cout << "‚ñå";
    }
}

void veTuong()
{
    veTuongTren();
    veTuongDuoi();
    veTuongPhai();
    veTuongTrai();
    SetColor(7);
}

void khoiTaoRan(int toadox[], int toadoy[])
{
    int x = 50, y = 13;
    for (int i = 0; i < s1; i++)
    {
        toadox[i] = x;
        toadoy[i] = y;
        x--;
    }
}

void veRan(int toadox[], int toadoy[])
{
    for (int i = 0; i < s1; i++)
    {
        gotoXY(toadox[i], toadoy[i]);
        if (i == 0)
        {
            SetColor(14); // ƒê·∫ßu r·∫Øn
            cout << "‚óâ";
        }
        else
        {
            SetColor(10 + (i % 6)); // Th√¢n r·∫Øn pixel
            cout << "‚ñì";
        }
    }
    SetColor(7);
}

void xoaDuLieuCu(int toadox[], int toadoy[])
{
    for (int i = 0; i < s1; i++)
    {
        gotoXY(toadox[i], toadoy[i]);
        cout << " ";
    }
}

void xuLyRan(int toadox[], int toadoy[], int x, int y, int& xqua, int& yqua, int& xSpecial, int& ySpecial)
{
    them(toadox, x);
    them(toadoy, y);
    
    bool ateFood = false;
    
    // Ki·ªÉm tra ƒÉn qu·∫£ th∆∞·ªùng
    if (ktRanAnQua(xqua, yqua, toadox[0], toadoy[0]))
    {
        diem += 10;
        ateFood = true;
        veHieuUngAnQua(xqua, yqua);
        capNhatTocDo();
        taoQua(xqua, yqua, toadox, toadoy);
        playSound(800, 50);
    }
    // Ki·ªÉm tra ƒÉn qu·∫£ ƒë·∫∑c bi·ªát
    else if (xSpecial != -1 && ktRanAnQua(xSpecial, ySpecial, toadox[0], toadoy[0]))
    {
        diem += 50;
        ateFood = true;
        veHieuUngAnQua(xSpecial, ySpecial);
        xSpecial = -1;
        ySpecial = -1;
        playSound(1000, 100);
    }
    
    if (!ateFood)
    {
        xoa(toadox, s1 - 1);
        xoa(toadoy, s1 - 1);
    }
    
    veRan(toadox, toadoy);
}

void veHieuUngAnQua(int x, int y)
{
    // T·∫°o hi·ªáu ·ª©ng particles
    for (int i = 0; i < 5; i++) {
        particles.push_back(make_pair(x + (rand() % 3 - 1), y + (rand() % 3 - 1)));
    }
    
    SetColor(15);
    gotoXY(x, y);
    cout << "‚ú¶";
    Sleep(50);
    gotoXY(x, y);
    cout << " ";
}

void updateParticles()
{
    if (!particles.empty()) {
        particles.erase(particles.begin());
    }
}

void veParticles()
{
    SetColor(15);
    for (auto& p : particles) {
        if (p.first > 10 && p.first < 100 && p.second > 1 && p.second < 26) {
            gotoXY(p.first, p.second);
            cout << "¬∑";
        }
    }
    SetColor(7);
}

void capNhatTocDo()
{
    if (tocdo > 50)
    {
        tocdo -= 3;
    }
}

void them(int a[], int x)
{
    for (int i = s1; i > 0; i--)
    {
        a[i] = a[i - 1];
    }
    a[0] = x;
    s1++;
}

void xoa(int a[], int vt)
{
    for (int i = vt; i < s1; i++)
    {
        a[i] = a[i + 1];
    }
    s1--;
}

bool ktRanChamTuong(int x0, int y0)
{
    return (y0 <= 1 || y0 >= 26 || x0 <= 10 || x0 >= 100);
}

bool ktRanChamDuoi(int toadox[], int toadoy[])
{
    for (int i = 1; i < s1; i++)
    {
        if (toadox[0] == toadox[i] && toadoy[0] == toadoy[i])
        {
            return true;
        }
    }
    return false;
}

bool ktRan(int toadox[], int toadoy[])
{
    return ktRanChamDuoi(toadox, toadoy) || ktRanChamTuong(toadox[0], toadoy[0]);
}

void taoQua(int& xqua, int& yqua, int toadox[], int toadoy[])
{
    do
    {
        xqua = rand() % (99 - 11 + 1) + 11;
        yqua = rand() % (25 - 2 + 1) + 2;
    } while (ktRanDeQua(xqua, yqua, toadox, toadoy));
    
    int mauQua = rand() % 6 + 10;
    SetColor(mauQua);
    gotoXY(xqua, yqua);
    cout << "‚óÜ";
    SetColor(7);
}

void taoQuaDacBiet(int& xSpecial, int& ySpecial, int toadox[], int toadoy[])
{
    do
    {
        xSpecial = rand() % (99 - 11 + 1) + 11;
        ySpecial = rand() % (25 - 2 + 1) + 2;
    } while (ktRanDeQua(xSpecial, ySpecial, toadox, toadoy));
    
    SetColor(15);
    gotoXY(xSpecial, ySpecial);
    cout << "‚òÖ";
    SetColor(7);
}

bool ktRanDeQua(int xqua, int yqua, int toadox[], int toadoy[])
{
    for (int i = 0; i < s1; i++)
    {
        if (xqua == toadox[i] && yqua == toadoy[i])
        {
            return true;
        }
    }
    return false;
}

bool ktRanAnQua(int xqua, int yqua, int x0, int y0)
{
    return (x0 == xqua && y0 == yqua);
}

void playSound(int frequency, int duration)
{
    Beep(frequency, duration);
}

void veGameOver()
{
    system("cls");
    SetColor(12);
    cout << "\n\n\t\t ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà \n";
    cout << "\t\t‚ñà‚ñà       ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà      \n";
    cout << "\t\t‚ñà‚ñà   ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   \n";
    cout << "\t\t‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà ‚ñà‚ñà      \n";
    cout << "\t\t ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà \n";
    SetColor(11);
    cout << "\t\t  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  \n";
    cout << "\t\t ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà \n";
    cout << "\t\t ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà    ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  \n";
    cout << "\t\t ‚ñà‚ñà    ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà  ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà \n";
    cout << "\t\t  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà \n\n";
    
    SetColor(14);
    cout << "\t\t‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
    cout << "\t\t‚ïë              KET QUA GAME                ‚ïë\n";
    cout << "\t\t‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£\n";
    SetColor(13);
    cout << "\t\t‚ïë üèÜ Diem so: " << diem;
    
    int spaces = 27 - to_string(diem).length();
    for (int i = 0; i < spaces; i++) cout << " ";
    cout << "‚ïë\n";
    
    cout << "\t\t‚ïë üêç Do dai: " << s1;
    spaces = 28 - to_string(s1).length();
    for (int i = 0; i < spaces; i++) cout << " ";
    cout << "‚ïë\n";
    
    cout << "\t\t‚ïë ‚ö° Level: " << level;
    spaces = 29 - to_string(level).length();
    for (int i = 0; i < spaces; i++) cout << " ";
    cout << "‚ïë\n";
    
    SetColor(15);
    if (diem == highScore && diem > 0) {
        cout << "\t\t‚ïë        üéâ NEW HIGH SCORE! üéâ             ‚ïë\n";
    }
    
    SetColor(14);
    cout << "\t\t‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n";
    
    SetColor(11);
    cout << "\t\t    [Nhan phim bat ky de tiep tuc...]";
    SetColor(7);
}

void vePause()
{
    SetColor(11);
    gotoXY(35, 12);
    cout << "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó";
    gotoXY(35, 13);
    cout << "‚ïë     ‚è∏Ô∏è  GAME PAUSED       ‚ïë";
    gotoXY(35, 14);
    cout << "‚ïë                           ‚ïë";
    gotoXY(35, 15);
    cout << "‚ïë   Press P to continue...  ‚ïë";
    gotoXY(35, 16);
    cout << "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù";
    SetColor(7);
}
